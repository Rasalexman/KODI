import appdependencies.Builds

apply plugin: 'maven-publish'

version = Builds.KodiReflect.VERSION_NAME
group = 'com.rasalexman.kodireflect'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

//just copy paste the lines below
/*if (project.hasProperty("kotlin")) { //Kotlin libraries
    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.sourceFiles
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else if (project.hasProperty("android")) {
    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
    // options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}*/

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.rasalexman.kodireflect'
                artifactId = 'kodireflect'
                version = Builds.KodiReflect.VERSION_NAME
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = 'com.rasalexman.kodireflect'
                artifactId = 'kodireflect-debug'
                version = Builds.KodiReflect.VERSION_NAME
            }
        }
    }
}
/*

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId 'com.rasalexman.kodireflect'
            artifactId 'kodireflect'
            version Builds.KodiReflect.VERSION_NAME
            name 'kodireflect' // pom.project.name must be same as bintray.pkg.name
        }
    }
}*/
